{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Note-taking - Organization of the Zeroth Folder","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Note-taking - Organization of the Zeroth Folder\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220317132836612\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"note-taking--organization-of-the-zeroth-folder\"\n  }, \"Note-taking \\u2013 Organization of the Zeroth Folder\"), mdx(\"p\", null, \"In my home directory, I have a folder named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0\"), \" which is mirrored between Linux and Android using Syncthing. It is named so that it appears first in lists and is easy to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cd\"), \" into. Under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/0\"), \" there is:\"), mdx(\"p\", null, \"Three Obsidian vaults.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Think box\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For thinking, deliberating opinions, and questioning myself\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Daily routines and situational routines, mental models.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notes on people.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Managing my lists (from ranked list of atrocities committed by governments to alphabetically sorted list of friends I would prefer as neighbors).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Highlights from Books (Moon reader) and Articles (Scrap bee).\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Digital Fortress\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Workflows, Criteria\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Links to Resources. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tutorials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code snippets. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Workflow-for-Code-Snippets\",\n    \"title\": \"Workflow for Code Snippets\"\n  }, \"Workflow for Code Snippets\"), \" #notYet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reviews.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Academic \\u2013 Personal Wikipedia.\")), mdx(\"p\", null, \"In addition, I have five more folders.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Intake \\u2013 Everything in pre-processed stage.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Accessories \\u2013 images, videos, some zsh scripts pertaining to note-taking workflow, part of Obsidian configs, HTML files downloaded by Scrap bee. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Notes-on-Accessories-Folder\",\n    \"title\": \"Notes on Accessories Folder\"\n  }, \"Notes on Accessories Folder\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Collection: poems, words, phrases and other things I collect.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Trackers: Mostly JSON from Nomie, some Excel sheets. Converted to graphs which is stored in Accessories folder.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Publish: A Hugo blog and a Gatsby blog. Ignored from Backup as it is pushed to GitHub which is a backup in itself. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Workflow-for-Publishing-Notes-from-Obsidian\",\n    \"title\": \"Workflow for Publishing Notes from Obsidian\"\n  }, \"Workflow for Publishing Notes from Obsidian\"), \" #notYet \")), mdx(\"p\", null, \"I am not a huge favorite of splitting notes. However overtime I have found that these three areas have very little overlap\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". Splitting this way also helps me to monitor the growth of these three areas separately, however crude a measure that may be.\"), mdx(\"p\", null, \"Within these vaults, I do not usually divide notes into folders. I found that creating index files is far more flexible than folders. In addition, I like the simplicity of linking by wrapping with double brackets without worrying about the paths. While Obsidian has magic configs that allow this even if the notes are in a separate folder, taking that route will restrict me to Obsidian.\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"Very little does not mean zero. For e.g. \\\"List of FOSS alternatives\\\" go to Digital Fortress, while \\\"Ethics of FOSS\\\" goes to Think Box. All the more reason to keep splits to minimum.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Notes on Accessories Folder\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220317152036516\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"notes-on-accessories-folder\"\n  }, \"Notes on Accessories Folder\"), mdx(\"p\", null, \"Accessories folder is served over a localhost port using a basic HTTP server. Images and Videos are then embedded in notes using the URL.\\nThis affords me the following conveniences:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Keep heavy files out of obsidian vaults. This leaves just text in obsidian vaults which I can encrypt and store in any number of free cloud storage services. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Rclone\",\n    \"title\": \"Rclone\"\n  }, \"Rclone\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"No need to worry about a bunch of ignore rules for backup and version control of vaults. The Accessories folder is backed up weekly to external hard drives weekly.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use images and videos in other software (e.g.: Anki) without concern about their exact location in the file system.\")), mdx(\"p\", null, \"Obsidian config that is shared between vaults is also kept in Accessories folder and symlinked to each vault. Shared configs include plugins, hotkeys, CSS snippets, and themes. Vault specific config, which remains within vault, controls things like which plugin/themes etc. are active in that specific vault.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"68bb45a0-a008-55fa-9d7c-357e0656a6b9","fields":{"slug":"/Notes on Accessories Folder","title":"Notes on Accessories Folder"}}}],"inboundReferences":[]},"fields":{"slug":"/Note-taking - Organization of the Zeroth Folder","title":"Note-taking – Organization of the Zeroth Folder"}}},"pageContext":{"id":"d5355e39-1985-5e81-a0f4-1e9e5945180d"}},"staticQueryHashes":["2221750479","2468095761"]}