{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/August 2022","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"August 2022\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"august-2022\"\n  }, \"August 2022\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Bacterial-Capsule\",\n    \"title\": \"Bacterial Capsule\"\n  }, \"Bacterial Capsule\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Bacterial-Cell-Layers\",\n    \"title\": \"Bacterial Cell Layers\"\n  }, \"Bacterial Cell Layers\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Bacillus-anthracis\",\n    \"title\": \"Bacillus anthracis\"\n  }, \"Bacillus anthracis\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Bacterial-Biofilm\",\n    \"title\": \"Bacterial Biofilm\"\n  }, \"Bacterial Biofilm\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Bacterial-Flagella\",\n    \"title\": \"Bacterial Flagella\"\n  }, \"Bacterial Flagella\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bacterial Capsule\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": [],\n  \"status\": null,\n  \"id\": 20220731213649760\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bacterial-capsule\"\n  }, \"Bacterial Capsule\"), mdx(\"p\", null, \"It is a type of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Bacterial-Cell-Layers#90ed77\",\n    \"title\": \"Bacterial Cell Layers\"\n  }, \"Glycocalyx\"), \". It is usually made of simple sugar residues. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Anthrax\",\n    \"title\": \"Anthrax\"\n  }, \"Bacillus anthracis\"), \" has a Capsule made of amino acids.\"), mdx(\"p\", null, \"Capsule is visualised under light microscope using 2 techniques\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"India Ink stain: It is not taken up by capsule - therefore capsule appears as a transparent halo around the cell, This stain is not used to visualise bacterial capsule but for visualising capsule of fungus \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Cryptococcus\",\n    \"title\": \"Cryptococcus\"\n  }, \"Cryptococcus\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Quellung Reaction: The culture containing bacteria is mixed with antibodies specifically against the capsule. Capsule swells up making it easy to visualise.\")), mdx(\"hr\", null), mdx(\"p\", null, \"See also \", mdx(\"a\", {\n    href: \"Opsonization\",\n    className: \"internal-link\"\n  }, \"Opsonization\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"35fb75bf-d6f6-5876-b811-7bf068e0d707","fields":{"slug":"/Bacterial Capsule","title":"Bacterial Capsule"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bacterial Cell Layers\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": [\"Bacterial cell wall\"],\n  \"status\": null,\n  \"id\": 20220228163235480\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bacterial-cell-layers\"\n  }, \"Bacterial Cell Layers\"), mdx(\"p\", null, \" A bacteria can have 1 to 4 layers\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Plasma membrane: Found in all\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cell wall 1 aka \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/Peptidoglycan\",\n    \"title\": \"Peptidoglycan\"\n  }, \"Peptidoglycan\"), \"\"), \": Found in all except L forms\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cell wall 2 aka \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outer membrane\"), \": Found in gram negative bacteria only\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Outer membrane is a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Lipopolysaccharide\",\n    \"title\": \"Lipopolysaccharide\"\n  }, \"Lipopolysaccharide\"), \" (LPS) whose \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/lipid\",\n    \"title\": \"lipid\"\n  }, \"lipid\"), \" A component can cause a toxic reaction when these bacteria are lysed by immune cells\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Glycoclayx: Found in a select set of bacteria. Could be slime or \", mdx(\"a\", {\n    href: \"Bacterial Capsule\",\n    className: \"internal-link\"\n  }, \"Capsule\"), \" ^90ed77\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A distinct, gelatinous glycocalyx is called a Capsule\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an irregular, diffuse layer is called a Slime layer\")))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"images/bacterial-cell-wall.png\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"In other words\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gram positive: Plasma membrane + Peptidoglycan\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gram negative: Plasma membrane + Peptidoglycan + Outer membrane\")), mdx(\"p\", null, \"See \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"List of Gram Positive Bacteria\",\n    className: \"internal-link\"\n  }, \"List of Gram Positive Bacteria\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/List-of-Gram-Negative-Bacteria\",\n    \"title\": \"List of Gram Negative Bacteria\"\n  }, \"List of Gram Negative Bacteria\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":["Bacterial cell wall"]},"parent":{"__typename":"File","id":"a9ad3861-0be9-5f40-8aea-5d36f35c49c3","fields":{"slug":"/Bacterial Cell Layers","title":"Bacterial Cell Layers"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bacillus anthracis\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": [],\n  \"status\": null,\n  \"id\": 20220731214233636\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bacillus-anthracis\"\n  }, \"Bacillus anthracis\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    href: \"Anthrax\",\n    className: \"internal-link\"\n  }, \"Anthrax\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a7d7219e-f4c1-5d8d-9c72-0ef0bf50fe70","fields":{"slug":"/Bacillus anthracis","title":"Bacillus anthracis"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bacterial Biofilm\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": [],\n  \"status\": null,\n  \"id\": 20220802131817450\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bacterial-biofilm\"\n  }, \"Bacterial Biofilm\"), mdx(\"p\", null, \"Biofilms are polysaccharides secreted by bacteria and forms a halo around them. They are not part of \", mdx(\"a\", {\n    href: \"Bacterial Cell Layers\",\n    className: \"internal-link\"\n  }, \"bacterial cell wall\"), \". \"), mdx(\"p\", null, \"Biofilms helps bacteria to attach to \", mdx(\"abbr\", {\n    title: \"Artifical device that replace or support body\"\n  }, \"prosthetic devices\"), \" like catheters. Since antibiotics find tit hard to penetrate biofilms, usual treatment is replacement of prosthetic devices.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3f461799-0361-5ad2-a3eb-a52db7f77fd7","fields":{"slug":"/Bacterial Biofilm","title":"Bacterial Biofilm"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bacterial Flagella\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": [],\n  \"status\": null,\n  \"id\": 20220731200355812\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"bacterial-flagella\"\n  }, \"Bacterial Flagella\"), mdx(\"p\", null, \"If Bacterial Flagella is a tree, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Basal Body\"), \" is its root which affix them to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Bacterial-Cell-Layers\",\n    \"title\": \"Bacterial Cell Layers\"\n  }, \"Bacterial cell wall\"), \". \"), mdx(\"p\", null, \"In gram positive, basal body is affixed to inner membrane, spans the peptidoglycan layer and gives rise to flagella\"), mdx(\"p\", null, \"In gram negative, basal body is affixed to inner membrane, spans the peptidoglycan layer, is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"affixed again to outer membran\"), \"e and gives rise to flagella.\"), mdx(\"p\", null, \"!\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Pasted-image-20220731201300.png\",\n    \"title\": \"Pasted image 20220731201300.png\"\n  }, \"Pasted image 20220731201300.png\"), \"\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Vibrio-cholera\",\n    \"title\": \"Vibrio cholera\"\n  }, \"Vibrio cholera\"), \" has a single polar flagella\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Escherichia-coli\",\n    \"title\": \"Escherichia coli\"\n  }, \"Escherichia coli\"), \" has peritrichous flagella (Small flagella all around the body.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spirochaets have periplasmic flagella. See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Spirochetes#periplasmic-flagella\",\n    \"title\": \"Spirochetes\"\n  }, \"Periplasmic flagella\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"cd6e086e-cbb3-5483-9534-86e91e5958ff","fields":{"slug":"/Bacterial Flagella","title":"Bacterial Flagella"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Notes by Calendar\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"notes-by-calendar\"\n  }, \"Notes by Calendar\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/February-2022\",\n    \"title\": \"February 2022\"\n  }, \"February 2022\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/March-2022\",\n    \"title\": \"March 2022\"\n  }, \"March 2022\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/August-2022\",\n    \"title\": \"August 2022\"\n  }, \"August 2022\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"ca8da861-8236-5ac1-80fd-9366be97b9f6","fields":{"slug":"/Notes by Calendar","title":"Notes by Calendar"}}}]},"fields":{"slug":"/August 2022","title":"August 2022"}}},"pageContext":{"id":"800f4b76-88cb-54be-acfd-22c25fdde39f"}},"staticQueryHashes":["2221750479","2468095761"]}