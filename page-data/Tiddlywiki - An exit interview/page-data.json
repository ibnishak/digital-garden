{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Tiddlywiki - An exit interview","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - An exit interview\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---an-exit-interview\"\n  }, \"Tiddlywiki - An exit interview\"), mdx(\"p\", null, \"Fair warning: This is not a takedown. I am just explaining why to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"my particular use-case\"), \", Tiddlywiki is not a good fit anymore. In a way this is documentation of my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Circle-of-Competence\",\n    \"title\": \"Circle of Competence\"\n  }, \"Circle of Competence\"), \" rather than limitation of Tiddlywiki. As a tool Tiddlywiki has persisted for 15+ years and earned praise from industry giants. So before dismissing it based on anyone's opinion, it would be only fair to give it a try.\"), mdx(\"p\", null, \"For some years I have been noticing this pattern:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I forget why I stopped using TW5.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I restart using Tiddlywiki.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I realize why I stopped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I stop using TW5 again.\")), mdx(\"p\", null, \"For this reason I am logging those reasons so I won't have to use my time and energy to rediscover them another couple of times.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Inability-to-scale\",\n    \"title\": \"Tiddlywiki - Inability to scale\"\n  }, \"Tiddlywiki - Inability to scale\"), \"\")), mdx(\"p\", null, \"Usually if a tool fails to clear essential criteria of its category (See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Note-taking-Apps-Criteria\",\n    \"title\": \"Note taking Apps - Criteria\"\n  }, \"Note taking Apps - Criteria\"), \"), I do not bother to look into it any further. Here I am making an exception, at least to document the rest of issues.\"), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Extensibility-issues\",\n    \"title\": \"Tiddlywiki - Extensibility issues\"\n  }, \"Tiddlywiki - Extensibility issues\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-NodeJS-flavor\",\n    \"title\": \"Tiddlywiki - Issues with NodeJS flavor\"\n  }, \"Tiddlywiki - Issues with NodeJS flavor\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-HTML-flavor\",\n    \"title\": \"Tiddlywiki - Issues with HTML flavor\"\n  }, \"Tiddlywiki - Issues with HTML flavor\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-search\",\n    \"title\": \"Tiddlywiki - Issues with search\"\n  }, \"Tiddlywiki - Issues with search\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-markup\",\n    \"title\": \"Tiddlywiki - Issues with markup\"\n  }, \"Tiddlywiki - Issues with markup\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-UI-Community-and-the-rest\",\n    \"title\": \"Tiddlywiki - Issues with UI, Community and the rest\"\n  }, \"Tiddlywiki - Issues with UI, Community and the rest\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Conclusion\",\n    \"title\": \"Tiddlywiki - Conclusion\"\n  }, \"Tiddlywiki - Conclusion\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Circle of Competence\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"id\": 20220216103023250\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"circle-of-competence\"\n  }, \"Circle of Competence\"), mdx(\"p\", null, \"Understanding your circle of competence helps you avoid problems, identify opportunities for improvement, and learn from others.\"), mdx(\"p\", null, \"The size of that circle is not very important; knowing its boundaries, however, is vital.\"), mdx(\"p\", null, \"You have to figure out what your own aptitudes are. If you play games where other people have the aptitudes and you don\\u2019t, you\\u2019re going to lose. And that\\u2019s as close to certain as any prediction that you can make. You have to figure out where you\\u2019ve got an edge. And you\\u2019ve got to play within your own circle of competence.\"), mdx(\"p\", null, \"If you want to improve your odds of success in life and business then define the perimeter of your circle of competence, and operate inside. Over time, work to expand that circle but never fool yourself about where it stands today, and never be afraid to say \\u201CI don\\u2019t know.\\u201D\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"4895cc0a-d4f0-5a28-9f65-568e1c211476","fields":{"slug":"/Circle of Competence","title":"Circle of Competence"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Inability to scale\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---inability-to-scale\"\n  }, \"Tiddlywiki - Inability to scale\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Scalability-Limits-for-Note-taking-Applications\",\n    \"title\": \"Scalability Limits for Note taking Applications\"\n  }, \"Scalability Limits for Note taking Applications\"), \"\"), mdx(\"p\", null, \"There are \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tiddlywiki.com/#Scalability\"\n  }, \"claims in the official website\"), \" about how much data can a single Tiddlywiki can hold. However, no actual benchmarks are given. I looked around and found the biggest public examples of Tiddlywiki I could find:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://onetwo.ren/CDDA-Kenan-Modpack-Chinese/#Index:Index%20README.md\"\n  }, \"Kenan's wiki\"), \": It has close to 30K notes, 85.6 MB in size as of 13th March 2022.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://philosopher.life/\"\n  }, \"H0p3's wiki\"), \". It has above 15K notes, 50.4 MB in size as of 13th March 2022.\")), mdx(\"p\", null, \"I downloaded them for further testing. H0p3 seems to be managing all lists in the wiki statically\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". That is fine by me, I am a firm believer of not using app specific markup in the notes. However, an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://philosopher.life/#2019.03.26%20-%20Wiki%20Audit%3A%20Cake\"\n  }, \"audit note by the author\"), \" in which he talks about data loss, issues with NodeJS and other TW5 saver mechanisms and so on gives some serious points to ponder over.\"), mdx(\"p\", null, \"Kenan's wiki loaded without any issues, but the good news ended there. Saving a note takes 5+ seconds. 5 seconds is not the end of the world, however the mild irritation that comes up with each wait is something I do not want in my note-taking workflow. Imagine each spelling mistake correction taking 5+ seconds.\"), mdx(\"p\", null, \"The RAM usage that comes with loading and editing such a large single page application is also quite significant. Adding and editing notes in these wikis crashed my browser multiple times.\"), mdx(\"p\", null, \"One of the most veteran users of Tiddlywiki had recently \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://groups.google.com/g/tiddlywiki/c/dEhq2V4ZYzg/m/PZVkt5hLFAAJ\"\n  }, \"raised the issue of scalability\"), \" which the community seems to have largely ignored.\"), mdx(\"p\", null, \"Usual advice from the community is to split the data among several wikis. However, that will\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Undercut the ability to see back-links.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make it unable to search the text content of your notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adds link-rot upon modification of note titles.\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"If you are familiar with the Tiddlywiki community, you will be hard-pressed to find a wiki where a list is created statically. Usage of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tiddlywiki.com/#ListWidget\"\n  }, \"list widget\"), \" is the bread and butter of Tiddlywiki users. Yet here is the biggest Tiddlywiki that seems to have been extra careful in avoiding the same. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3d8c4b1a-ee87-5092-9d5e-efd294ca9c34","fields":{"slug":"/Tiddlywiki - Inability to scale","title":"Tiddlywiki - Inability to scale"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Note taking Apps -  Criteria\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": \"published\",\n  \"id\": 20220304211433576\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"note-taking-apps---criteria\"\n  }, \"Note-taking Apps - Criteria\"), mdx(\"h2\", {\n    \"id\": \"essential-criteria\"\n  }, \"Essential criteria.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cross-platform.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"At least Linux and Android must be supported.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Privacy and Offline Accessibility.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Mobile Accessibility.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Scalable.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Scalability-Limits-for-Note-taking-Applications\",\n    \"title\": \"Scalability Limits for Note taking Applications\"\n  }, \"Scalability Limits for Note taking Applications\"), \"\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ability to cross-link notes.\")), mdx(\"h2\", {\n    \"id\": \"desired-criteria\"\n  }, \"Desired criteria.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fast and accurate search.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fast navigation, preferably keyboard based.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Semi automation of organization.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Bottom up organization.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ability to add Quick Notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Effortless setup, but extendable according to personal requirements.\")), mdx(\"h2\", {\n    \"id\": \"ideal-criteria\"\n  }, \"Ideal criteria\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Complete portability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The question to consider is: \\\"If I have to open my notes in a computer with only default apps, can I make sense of it?\\\"\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Web-clipper add-on for browser.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Secure cloud backups.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Visualization of relationships between notes as a mind-map.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Tool-chain for publication of selected notes.\")), mdx(\"h2\", {\n    \"id\": \"interesting-links\"\n  }, \"Interesting links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.notion.so/Artificial-Brain-Networked-notebook-app-a131b468fc6f43218fb8105430304709\"\n  }, \"Artificial Brain Networked notebook app - Master list of Personal knowledge base softwares\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://wiki.nikitavoloboev.xyz/other/wiki-workflow#similar-wikis-i-liked\"\n  }, \"List of Public Zettelkasten Wikis\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b38ce013-cf2d-579d-9255-9ef28815c452","fields":{"slug":"/Note taking Apps - Criteria","title":"Note-taking Apps - Criteria"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Extensibility issues\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---extensibility-issues\"\n  }, \"Tiddlywiki - Extensibility issues\"), mdx(\"p\", null, \"Tiddlywiki has an expressive internal language in which most of plugins are written\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". This reminds me of Emacs/Vim attitude to extensibility. You have all the power, but only if you learn ELisp/Vim script/WikiText.\"), mdx(\"p\", null, \"None of these languages has any application outside their restricted environments. The knowledge regarding these can be neither transferred in or transferred out. There is hardly any meta tools for this internal language - say syntax-highlighting or prettification tools. In addition, unlike Emacs/Vim, the community size of Tiddlywiki is rather small. The effect of such barriers easy to gauge when you compare the speed at which \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://obsidian-plugin-stats.vercel.app/\"\n  }, \"plugin ecosystem is expanding for apps like Obsidian\"), \"(which has well defined API in Typescript) compared to that of Tiddlywiki.\"), mdx(\"p\", null, \"Overtime I have gained enough mastery over Tiddlywiki widgets and other quirks. However greater number of community built plugins have 2 fold effect\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Higher chances of finding something ready-made.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You have more templates to learn from and build something anew and personalized.\")), mdx(\"p\", null, \"So less tinkering, more actually writing.\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"While it is also possible to write plugins in Javascript, you will be hard-pressed to find any kind of documentation regarding this.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"c5111523-8b8c-584b-9690-f3580c6f0337","fields":{"slug":"/Tiddlywiki - Extensibility issues","title":"Tiddlywiki - Extensibility issues"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Issues with NodeJS variant\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---issues-with-nodejs-variant\"\n  }, \"Tiddlywiki - Issues with NodeJS variant\"), mdx(\"p\", null, \"Between NodeJS flavor and Single Page Application flavor of Tiddlywiki, NodeJS flavor of Tiddlywiki is the one that acts more in line with expectations from a plain text note taking application. Each note is saved to a separate plain-text file with the extension \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tid\"), \". One should install NodeJS runtime and acquiring basic terminal skills in order to get this running. While it was not an issue for me, this should bother average Windows users who never had to interact with terminal before.\"), mdx(\"p\", null, \"When it comes to mobile, things start to go bad though. The existing third-party android application for Tiddlywiki does not support NodeJS flavor of Tiddlywiki. You can run \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://termux.com/\"\n  }, \"Termux\"), \", install NodeJS and run the server in Android. However the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ibnishak.github.io/blog/post/tw5-options-in-android-platform/#built-in-server\"\n  }, \"loading time for Tiddlywiki server in Android is atrocious\"), \". One might not prefer to have multiple NodeJS servers - one for each wiki - running in background all the time. Given that, start-up times becomes a persistent problem rather than a one-time issue.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a96e76eb-ca09-5cf3-a20f-6317a1aee879","fields":{"slug":"/Tiddlywiki - Issues with NodeJS flavor","title":"Tiddlywiki - Issues with NodeJS variant"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Issues with HTML flavor\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---issues-with-html-flavor\"\n  }, \"Tiddlywiki - Issues with HTML flavor\"), mdx(\"p\", null, \"In HTML flavor, all the data is saved in a single HTML file. This is a unique Tiddlywiki approach and a radical one. Every other note taking solution including markdown, requires some sort of parser. You might find yourselves in a position where you don't have the privileges to install a software in a computer, thereby cutting you off from your notes. However it is a safe bet that any of those machines will have a web browser installed, and that is all you need to read your Tiddlywiki notes in single HTML flavor.\"), mdx(\"p\", null, \"The nitty-gritty details are not rosy though. You have all the data in a single file - essentially a database with no syncing API. So you need to sync the entire file between devices. Imagine you have a Tiddlywiki that is 25MB in size (remember h0p3's wiki as 15K notes and is 50MB in size). Each minor correction in any of those notes require re-upload of 25MB. By your 1000th modification, you have consumed 25GB bandwidth as opposed to 10MB for a 10KB file.\\nConsider a syncing conflict. It is certainly not impossible, but definitely harder to diff two large HTML files than two small text files. Git does not look kindly upon a >2MB HTML file modified in every commit. A partial solution to this issue is using Timimi - but it is more of a backup solution than version control.\"), mdx(\"p\", null, \"For a user who is familiar with the ease tools like fzf, fd etc brings to workflow, single HTML file might not be palatable. Again it is not impossible to modify the Tiddlywiki HTML file using the familiar scripting tools, just harder.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"ea312b8e-f511-55df-868b-c68d03f0e081","fields":{"slug":"/Tiddlywiki - Issues with HTML flavor","title":"Tiddlywiki - Issues with HTML flavor"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Issues with search\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---issues-with-search\"\n  }, \"Tiddlywiki - Issues with search\"), mdx(\"p\", null, \"This is easy to demonstrate - go to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tiddlywiki.com/\"\n  }, \"Tiddlywiki website\"), \" and type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"macro\"), \" into the search field. There is a note in that Tiddlywiki titled \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Macros\"), \", which is naturally expected as the top result. However, it appears in way down, in search results sorted alphabetically. While you can change the sort order of search results to other parameters like creation date or modification date, there is no way to sort it by \\\"relevance\\\". The third party solutions for this problem depend on creating and recreating index on every single change, which is inefficient and balloons the size of wiki.\"), mdx(\"p\", null, \"Also see: \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://talk.tiddlywiki.org/t/tiddlywiki-documentation-structure-and-audience/2753\"\n  }, \"Discussion about Search in Tiddlywiki\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"bd2f76d2-0a40-514f-8f8f-4499f8a46074","fields":{"slug":"/Tiddlywiki - Issues with search","title":"Tiddlywiki - Issues with search"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Issues with markup\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---issues-with-markup\"\n  }, \"Tiddlywiki - Issues with markup\"), mdx(\"p\", null, \"Of all the issues, this one is not the fault of Tiddlywiki. It is not even an issue to be honest, mere inconvenience. When Tiddlywiki started out, markdown was also in its infancy. However later years saw markdown emerge as the markup of choice among note taking applications and static site generators, while Tiddlywiki refused to follow the trend for the sake of backward compatibility.\"), mdx(\"p\", null, \"Tiddlywiki did finally decide to support markdown in later years. However it is still afforded a secondary status. For eg; if you take a note in markdown, your metadata for the note is stored separately, as opposed to the front-matter like system used by Tiddlywiki markup.\"), mdx(\"p\", null, \"If I write a note in markdown, I have the option to open that same note in no less than 10 different note taking applications and continue without missing a beat. In contrast, I cannot think of a single alternative note taking application that supports Tiddlywiki markup. Of course you can export it to HTML and convert it from there to markdown. However as we all know there is no perfect automation when it comes to unstructured data like personal notes, and you will end up having to confirm parity manually.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"9fb01848-764f-5326-b956-bf6421790b34","fields":{"slug":"/Tiddlywiki - Issues with markup","title":"Tiddlywiki - Issues with markup"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Issues with UI, Community and the rest\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---issues-with-ui-community-and-the-rest\"\n  }, \"Tiddlywiki - Issues with UI, Community and the rest\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"There is no way to put this gently, Tiddlywiki UI is outdated. Yes, beauty is in the eyes of beholder, I am being superficial yada yada. Despite having immense potential and ease with which Tiddlywiki could modify its UI, it decided to stay with the 90s. Biggest visible changes to UI in the core has been introduction of menubar which is an eyesore. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.figma.com/proto/TCQj1L5v85AEB0RUqDMA8a/TiddliWiki-revamp?node-id=586%3A0&viewport=403%2C424%2C0.2502712905406952&scaling=min-zoom\"\n  }, \"Well intentioned developers had offered to help out\"), \" for free, only to be never heard from again, presumably due to lack of input or interest from the community.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Tiddlywiki had been plagued by lack of a centralized store for community plugins till last year. It finally came up with a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://links.tiddlywiki.com/\"\n  }, \"very creative solution\"), \" which solves categorization, quality control and use of human resources of community in a single swoop. However the response from community has been lukewarm at best. A full year after launch, it has 13 contributors listed.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Basic features like \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"search-and-replace\"), \" across notes should not require a deep dive into the documentation and rolling out your own buttons.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"While tiddlywiki has a third party android app, the user experience is not at all comparable to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://play.google.com/store/apps/details?id=net.gsantner.markor&hl=en_IN&gl=US\"\n  }, \"Markor\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.producthunt.com/stories/announcing-the-golden-kitty-awards-2021-winners\"\n  }, \"Producthunt Golden Kitty Award Winner - Obsidian\"), \".\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b0e46042-b8d4-5ecb-8c52-7bfdf15dbe54","fields":{"slug":"/Tiddlywiki - Issues with UI, Community and the rest","title":"Tiddlywiki - Issues with UI, Community and the rest"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Conclusion\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220316194517290\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---way-ahead\"\n  }, \"Tiddlywiki - Way ahead\"), mdx(\"p\", null, \"Tiddlywiki is a unique tool. That is not always good. When your tool is unique, your problems are also unique and solutions might be rare. It is incredibly powerful to roll out your own solutions, but it is time-consuming. Ultimately the question is do you want to work on your notes, or do you want to work on your tool. Its unique selling proposition of powerful filters and transclusion is being implemented in apps like Logseq and Obsidian, which gives one fewer and fewer incentives to stay with Tiddlywiki.\"), mdx(\"p\", null, \"For all the reasons mentioned in this series of notes, I am migrating my notes away from Tiddlywiki. Nevertheless, I intend to continue to support \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ibnishak/Timimi\"\n  }, \"Timimi\"), \".  \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"7a16a718-9e51-5534-9048-727de5cab70f","fields":{"slug":"/Tiddlywiki - Conclusion","title":"Tiddlywiki - Way ahead"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"History of Notes Migration\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220316195935296\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"history-of-notes-migration\"\n  }, \"History of Notes Migration\"), mdx(\"p\", null, \"I started note-taking in analog -a lined notebook. It was more of a commonplace book than note-taking per se. However I liked the process. It helped me to draw quotes and little poems for my school essays. I collected jokes and used them in conversations with surprising effect to my acceptance in social circles.\"), mdx(\"p\", null, \"Then came the first migration - OneNote was a revelation. You didn't have to worry about ink and pages running out. You didn't have to remember where you put it. It was gorgeous too with its tabs and notebooks. To this day I pine for the ability to take notes in a canvas like interface. The fact that my school taught how to use MS Word, MS Powerpoint, MS Excel and others but not OneNote baffled me to no end. I evangelized OneNote to anybody who would listen. However this was the most painful migration. There was no way to digitize handwriting available widely at that point. So I had to type my entire collection, page by page, letter by letter.\"), mdx(\"p\", null, \"It was teenage idealism that fuelled the second migration. I heard someone say that knowledge must be free and in order to achieve it, tools of knowledge must be free of artificial shackles too. So I ditched Windows back in mid 2000s and moved to Linux. This is the first time I understood the value of an app being cross-platform. That was the sole concern and I ended up choosing Evernote for this reason. The cognitive dissonance of this decision flew over my head at that time.\"), mdx(\"p\", null, \"Evernote is probably the longest I have stuck to one note taking platform - around 10 years. This also coincided with the time when I firmly believed all the data should move to cloud. Google was a techno-Messiah. Then I heard someone say something about a concept called privacy of our digital data. I was slowly trying to do more than collecting interesting snippets in my notes - like actually doing some thinking of my own. Evernote gently scared me to ditching them with an update to privacy policy which made an implicit fear explicit - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://techcrunch.com/2016/12/14/evernotes-new-privacy-policy-allows-employees-to-read-your-notes/\"\n  }, \"real people can snoop and read our data\"), \".\"), mdx(\"p\", null, \"So I had two essential conditions at that point - app should be cross platform and private. I explored quite a bit. Dokuwiki, ZimWiki, and Org-mode gave me the idea plain text files could be more than just text. However I could not find a mobile application that can replicate their features\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". I did not have access to a real computer all the time. So mobile accessibility of notes became a critical criterion too.\"), mdx(\"p\", null, \"After a long drawn search, I found Tiddlywiki. It was browser based - so it could operate in any platform including mobile. It was essentially an HTML file that stayed in your computer that you can sync to mobile, so no privacy issues either. Even better - it had an Evernote importer. This made the third migration much easier than I expected. I have used Tiddlywiki as my main driver for the past 5-6 years. In that time I have also contributed to the community in different ways, including \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ibnishak.github.io/Timimi/\"\n  }, \"Timimi\"), \".\"), mdx(\"p\", null, \"Now the time has come for the fourth migration. The major reason this time is scalability. In the last 20 years, I have accumulated over 33K notes. I am holding this over a rather large number of Tiddlywikis. It seemed like splitting data into separate files, and organizing them neatly in folders was the logical thing to do. Forget logical, it was the only way to I knew to take notes. This splitting of data in this form is creating a great deal of trouble. Links across wikis do not generate backlinks. You have to update all the cross-wiki links manually when you rename a note. If you cannot recall which wiki held a note, there was no easy way to find them. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Tiddlywiki-An-exit-interview\",\n    \"title\": \"Tiddlywiki - An exit interview\"\n  }, \"Tiddlywiki - An exit interview\"), \"\"), mdx(\"p\", null, \"I was really hesitant to bite the bullet and migrate once more. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Sunk-Cost-Fallacy\",\n    \"title\": \"Sunk Cost Fallacy\"\n  }, \"Sunk Cost Fallacy\"), \". That was until the Zettelkasten crowd, Roam cult, Obsidian and Mr Ahren forced my hand, not only to take a look at my note taking application stack, but also to look at the workflow.\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Notes-on-Fourth-Migration\",\n    \"title\": \"Notes on Fourth Migration\"\n  }, \"Notes on Fourth Migration\"), \"\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"This was 2016. Today Org mode has a wonderful android app called \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.orgzly.com/\"\n  }, \"Orgzly\"), \", while Zim markup is supported by \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://play.google.com/store/apps/details?id=net.gsantner.markor\"\n  }, \"Markor\"), \"- both are excellent open-source android apps.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f7e28d36-5b8d-5ac7-8642-842c3cf1aab3","fields":{"slug":"/History of Notes Migration","title":"History of Notes Migration"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"March 2022\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"march-2022\"\n  }, \"March 2022\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Reverse-outlining\",\n    \"title\": \"Reverse outlining\"\n  }, \"Reverse outlining\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Note-taking-Apps-Criteria\",\n    \"title\": \"Note taking Apps - Criteria\"\n  }, \"Note taking Apps - Criteria\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/History-of-Notes-Migration\",\n    \"title\": \"History of Notes Migration\"\n  }, \"History of Notes Migration\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-An-exit-interview\",\n    \"title\": \"Tiddlywiki - An exit interview\"\n  }, \"Tiddlywiki - An exit interview\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Criteria-for-Bad-Ideologies\",\n    \"title\": \"Criteria for Bad Ideologies\"\n  }, \"Criteria for Bad Ideologies\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Rules-of-Social-behaviour\",\n    \"title\": \"Rules of Social behaviour\"\n  }, \"Rules of Social behaviour\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Why-learn-Philosophy\",\n    \"title\": \"Why learn Philosophy\"\n  }, \"Why learn Philosophy\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Need-for-Serendipity-engines\",\n    \"title\": \"Need for Serendipity engines\"\n  }, \"Need for Serendipity engines\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Git-Annex\",\n    \"title\": \"Git Annex\"\n  }, \"Git Annex\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/About-Criticism\",\n    \"title\": \"About Criticism\"\n  }, \"About Criticism\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Ethics-of-Capitalism\",\n    \"title\": \"Ethics of Capitalism\"\n  }, \"Ethics of Capitalism\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"816522e1-2dc2-5083-a674-316714d7a801","fields":{"slug":"/March 2022","title":"March 2022"}}}]},"fields":{"slug":"/Tiddlywiki - An exit interview","title":"Tiddlywiki - An exit interview"}}},"pageContext":{"id":"2fd5341e-5a6c-5aa7-9e44-a02d50a3ca63"}},"staticQueryHashes":["2221750479","2468095761"]}