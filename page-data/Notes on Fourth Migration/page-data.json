{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Notes on Fourth Migration","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Notes on Fourth Migration\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"notes-on-fourth-migration\"\n  }, \"Notes on Fourth Migration\"), mdx(\"p\", null, \"As mentioned in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/History-of-Notes-Migration\",\n    \"title\": \"History of Notes Migration\"\n  }, \"History of Notes Migration\"), \", what prompted this migration was Tiddlywiki's inability to scale. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Tiddlywiki-Inability-to-scale\",\n    \"title\": \"Tiddlywiki - Inability to scale\"\n  }, \"Tiddlywiki - Inability to scale\"), \". True to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Infinite-buffet-approach\",\n    \"title\": \"Infinite buffet approach\"\n  }, \"Infinite buffet approach\"), \", I decided to see what is around and what all fits my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Note-taking-Apps-Criteria\",\n    \"title\": \"Note taking Apps - Criteria\"\n  }, \"Note taking Apps - Criteria\"), \".\"), mdx(\"p\", null, \"Every migration is painful. Every migration is also intended to be the last. So I tried to introduce little more resilience this time. Instead of choosing a single note taking application, I chose markdown with extra features that is supported by more than 1 application. These extra features include\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"YAML frontmatter\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTML parsing\")), mdx(\"p\", null, \"These set of rules essentially opened up a large swathe of possibilities - from Foam, Vimwiki(markdown), Obsidian, Logseq, Notability, Joplin, Vnote, Qownnotes...\"), mdx(\"p\", null, \"After a rapid round of whittling down, I essentially brought it down to Obsidian and Foam. I use Obsidian as my daily driver, but I use it in conjunction with foam to ensure that if Obsidian goes caput, I can switch in an instant.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"History of Notes Migration\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220316195935296\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"history-of-notes-migration\"\n  }, \"History of Notes Migration\"), mdx(\"p\", null, \"I started note-taking in analog -a lined notebook. It was more of a commonplace book than note-taking per se. However I liked the process. It helped me to draw quotes and little poems for my school essays. I collected jokes and used them in conversations with surprising effect to my acceptance in social circles.\"), mdx(\"p\", null, \"Then came the first migration - OneNote was a revelation. You didn't have to worry about ink and pages running out. You didn't have to remember where you put it. It was gorgeous too with its tabs and notebooks. To this day I pine for the ability to take notes in a canvas like interface. The fact that my school taught how to use MS Word, MS Powerpoint, MS Excel and others but not OneNote baffled me to no end. I evangelized OneNote to anybody who would listen. However this was the most painful migration. There was no way to digitize handwriting available widely at that point. So I had to type my entire collection, page by page, letter by letter.\"), mdx(\"p\", null, \"It was teenage idealism that fuelled the second migration. I heard someone say that knowledge must be free and in order to achieve it, tools of knowledge must be free of artificial shackles too. So I ditched Windows back in mid 2000s and moved to Linux. This is the first time I understood the value of an app being cross-platform. That was the sole concern and I ended up choosing Evernote for this reason. The cognitive dissonance of this decision flew over my head at that time.\"), mdx(\"p\", null, \"Evernote is probably the longest I have stuck to one note taking platform - around 10 years. This also coincided with the time when I firmly believed all the data should move to cloud. Google was a techno-Messiah. Then I heard someone say something about a concept called privacy of our digital data. I was slowly trying to do more than collecting interesting snippets in my notes - like actually doing some thinking of my own. Evernote gently scared me to ditching them with an update to privacy policy which made an implicit fear explicit - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://techcrunch.com/2016/12/14/evernotes-new-privacy-policy-allows-employees-to-read-your-notes/\"\n  }, \"real people can snoop and read our data\"), \".\"), mdx(\"p\", null, \"So I had two essential conditions at that point - app should be cross platform and private. I explored quite a bit. Dokuwiki, ZimWiki, and Org-mode gave me the idea plain text files could be more than just text. However I could not find a mobile application that can replicate their features\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". I did not have access to a real computer all the time. So mobile accessibility of notes became a critical criterion too.\"), mdx(\"p\", null, \"After a long drawn search, I found Tiddlywiki. It was browser based - so it could operate in any platform including mobile. It was essentially an HTML file that stayed in your computer that you can sync to mobile, so no privacy issues either. Even better - it had an Evernote importer. This made the third migration much easier than I expected. I have used Tiddlywiki as my main driver for the past 5-6 years. In that time I have also contributed to the community in different ways, including \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ibnishak.github.io/Timimi/\"\n  }, \"Timimi\"), \".\"), mdx(\"p\", null, \"Now the time has come for the fourth migration. The major reason this time is scalability. In the last 20 years, I have accumulated over 33K notes. I am holding this over a rather large number of Tiddlywikis. It seemed like splitting data into separate files, and organizing them neatly in folders was the logical thing to do. Forget logical, it was the only way to I knew to take notes. This splitting of data in this form is creating a great deal of trouble. Links across wikis do not generate backlinks. You have to update all the cross-wiki links manually when you rename a note. If you cannot recall which wiki held a note, there was no easy way to find them. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Tiddlywiki-An-exit-interview\",\n    \"title\": \"Tiddlywiki - An exit interview\"\n  }, \"Tiddlywiki - An exit interview\"), \"\"), mdx(\"p\", null, \"I was really hesitant to bite the bullet and migrate once more. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Sunk-Cost-Fallacy\",\n    \"title\": \"Sunk Cost Fallacy\"\n  }, \"Sunk Cost Fallacy\"), \". That was until the Zettelkasten crowd, Roam cult, Obsidian and Mr Ahren forced my hand, not only to take a look at my note taking application stack, but also to look at the workflow.\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Notes-on-Fourth-Migration\",\n    \"title\": \"Notes on Fourth Migration\"\n  }, \"Notes on Fourth Migration\"), \"\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"This was 2016. Today Org mode has a wonderful android app called \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.orgzly.com/\"\n  }, \"Orgzly\"), \", while Zim markup is supported by \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://play.google.com/store/apps/details?id=net.gsantner.markor\"\n  }, \"Markor\"), \"- both are excellent open-source android apps.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"f7e28d36-5b8d-5ac7-8642-842c3cf1aab3","fields":{"slug":"/History of Notes Migration","title":"History of Notes Migration"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Inability to scale\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---inability-to-scale\"\n  }, \"Tiddlywiki - Inability to scale\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Scalability-Limits-for-Note-taking-Applications\",\n    \"title\": \"Scalability Limits for Note taking Applications\"\n  }, \"Scalability Limits for Note taking Applications\"), \"\"), mdx(\"p\", null, \"There are \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tiddlywiki.com/#Scalability\"\n  }, \"claims in the official website\"), \" about how much data can a single Tiddlywiki can hold. However, no actual benchmarks are given. I looked around and found the biggest public examples of Tiddlywiki I could find:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://onetwo.ren/CDDA-Kenan-Modpack-Chinese/#Index:Index%20README.md\"\n  }, \"Kenan's wiki\"), \": It has close to 30K notes, 85.6 MB in size as of 13th March 2022.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://philosopher.life/\"\n  }, \"H0p3's wiki\"), \". It has above 15K notes, 50.4 MB in size as of 13th March 2022.\")), mdx(\"p\", null, \"I downloaded them for further testing. H0p3 seems to be managing all lists in the wiki statically\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". That is fine by me, I am a firm believer of not using app specific markup in the notes. However, an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://philosopher.life/#2019.03.26%20-%20Wiki%20Audit%3A%20Cake\"\n  }, \"audit note by the author\"), \" in which he talks about data loss, issues with NodeJS and other TW5 saver mechanisms and so on gives some serious points to ponder over.\"), mdx(\"p\", null, \"Kenan's wiki loaded without any issues, but the good news ended there. Saving a note takes 5+ seconds. 5 seconds is not the end of the world, however the mild irritation that comes up with each wait is something I do not want in my note-taking workflow. Imagine each spelling mistake correction taking 5+ seconds.\"), mdx(\"p\", null, \"The RAM usage that comes with loading and editing such a large single page application is also quite significant. Adding and editing notes in these wikis crashed my browser multiple times.\"), mdx(\"p\", null, \"One of the most veteran users of Tiddlywiki had recently \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://groups.google.com/g/tiddlywiki/c/dEhq2V4ZYzg/m/PZVkt5hLFAAJ\"\n  }, \"raised the issue of scalability\"), \" which the community seems to have largely ignored.\"), mdx(\"p\", null, \"Usual advice from the community is to split the data among several wikis. However, that will\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Undercut the ability to see back-links.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make it unable to search the text content of your notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adds link-rot upon modification of note titles.\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"If you are familiar with the Tiddlywiki community, you will be hard-pressed to find a wiki where a list is created statically. Usage of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tiddlywiki.com/#ListWidget\"\n  }, \"list widget\"), \" is the bread and butter of Tiddlywiki users. Yet here is the biggest Tiddlywiki that seems to have been extra careful in avoiding the same. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3d8c4b1a-ee87-5092-9d5e-efd294ca9c34","fields":{"slug":"/Tiddlywiki - Inability to scale","title":"Tiddlywiki - Inability to scale"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Infinite buffet approach\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220227094240740\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"infinite-buffet-approach\"\n  }, \"Infinite buffet approach\"), mdx(\"p\", null, \"Life is a buffet with infinite choices. In the initial stage, one should explore rapidly. After a while, one should revisit the best out of choices tested till then. While choices are infinite, our time and tummy space is finite. After this stage one ought to split their time to revisiting best out of known choices and exploring further. The ratio of time will keep tilting towards former but one ought to take care not to tip over.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Distro-hopping\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Search for the perfect workflow\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"c59fe39a-86d4-5a08-bff5-619169e960aa","fields":{"slug":"/Infinite buffet approach","title":"Infinite buffet approach"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Note taking Apps -  Criteria\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": \"published\",\n  \"id\": 20220304211433576\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"note-taking-apps---criteria\"\n  }, \"Note-taking Apps - Criteria\"), mdx(\"h2\", {\n    \"id\": \"essential-criteria\"\n  }, \"Essential criteria.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cross-platform.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"At least Linux and Android must be supported.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Privacy and Offline Accessibility.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Mobile Accessibility.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Scalable.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Scalability-Limits-for-Note-taking-Applications\",\n    \"title\": \"Scalability Limits for Note taking Applications\"\n  }, \"Scalability Limits for Note taking Applications\"), \"\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ability to cross-link notes.\")), mdx(\"h2\", {\n    \"id\": \"desired-criteria\"\n  }, \"Desired criteria.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fast and accurate search.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fast navigation, preferably keyboard based.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Semi automation of organization.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Bottom up organization.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ability to add Quick Notes\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Effortless setup, but extendable according to personal requirements.\")), mdx(\"h2\", {\n    \"id\": \"ideal-criteria\"\n  }, \"Ideal criteria\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Complete portability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The question to consider is: \\\"If I have to open my notes in a computer with only default apps, can I make sense of it?\\\"\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Web-clipper add-on for browser.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Secure cloud backups.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Visualization of relationships between notes as a mind-map.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Tool-chain for publication of selected notes.\")), mdx(\"h2\", {\n    \"id\": \"interesting-links\"\n  }, \"Interesting links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.notion.so/Artificial-Brain-Networked-notebook-app-a131b468fc6f43218fb8105430304709\"\n  }, \"Artificial Brain Networked notebook app - Master list of Personal knowledge base softwares\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://wiki.nikitavoloboev.xyz/other/wiki-workflow#similar-wikis-i-liked\"\n  }, \"List of Public Zettelkasten Wikis\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b38ce013-cf2d-579d-9255-9ef28815c452","fields":{"slug":"/Note taking Apps - Criteria","title":"Note-taking Apps - Criteria"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"History of Notes Migration\",\n  \"tags\": null,\n  \"up\": null,\n  \"aliases\": null,\n  \"status\": null,\n  \"id\": 20220316195935296\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"history-of-notes-migration\"\n  }, \"History of Notes Migration\"), mdx(\"p\", null, \"I started note-taking in analog -a lined notebook. It was more of a commonplace book than note-taking per se. However I liked the process. It helped me to draw quotes and little poems for my school essays. I collected jokes and used them in conversations with surprising effect to my acceptance in social circles.\"), mdx(\"p\", null, \"Then came the first migration - OneNote was a revelation. You didn't have to worry about ink and pages running out. You didn't have to remember where you put it. It was gorgeous too with its tabs and notebooks. To this day I pine for the ability to take notes in a canvas like interface. The fact that my school taught how to use MS Word, MS Powerpoint, MS Excel and others but not OneNote baffled me to no end. I evangelized OneNote to anybody who would listen. However this was the most painful migration. There was no way to digitize handwriting available widely at that point. So I had to type my entire collection, page by page, letter by letter.\"), mdx(\"p\", null, \"It was teenage idealism that fuelled the second migration. I heard someone say that knowledge must be free and in order to achieve it, tools of knowledge must be free of artificial shackles too. So I ditched Windows back in mid 2000s and moved to Linux. This is the first time I understood the value of an app being cross-platform. That was the sole concern and I ended up choosing Evernote for this reason. The cognitive dissonance of this decision flew over my head at that time.\"), mdx(\"p\", null, \"Evernote is probably the longest I have stuck to one note taking platform - around 10 years. This also coincided with the time when I firmly believed all the data should move to cloud. Google was a techno-Messiah. Then I heard someone say something about a concept called privacy of our digital data. I was slowly trying to do more than collecting interesting snippets in my notes - like actually doing some thinking of my own. Evernote gently scared me to ditching them with an update to privacy policy which made an implicit fear explicit - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://techcrunch.com/2016/12/14/evernotes-new-privacy-policy-allows-employees-to-read-your-notes/\"\n  }, \"real people can snoop and read our data\"), \".\"), mdx(\"p\", null, \"So I had two essential conditions at that point - app should be cross platform and private. I explored quite a bit. Dokuwiki, ZimWiki, and Org-mode gave me the idea plain text files could be more than just text. However I could not find a mobile application that can replicate their features\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". I did not have access to a real computer all the time. So mobile accessibility of notes became a critical criterion too.\"), mdx(\"p\", null, \"After a long drawn search, I found Tiddlywiki. It was browser based - so it could operate in any platform including mobile. It was essentially an HTML file that stayed in your computer that you can sync to mobile, so no privacy issues either. Even better - it had an Evernote importer. This made the third migration much easier than I expected. I have used Tiddlywiki as my main driver for the past 5-6 years. In that time I have also contributed to the community in different ways, including \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ibnishak.github.io/Timimi/\"\n  }, \"Timimi\"), \".\"), mdx(\"p\", null, \"Now the time has come for the fourth migration. The major reason this time is scalability. In the last 20 years, I have accumulated over 33K notes. I am holding this over a rather large number of Tiddlywikis. It seemed like splitting data into separate files, and organizing them neatly in folders was the logical thing to do. Forget logical, it was the only way to I knew to take notes. This splitting of data in this form is creating a great deal of trouble. Links across wikis do not generate backlinks. You have to update all the cross-wiki links manually when you rename a note. If you cannot recall which wiki held a note, there was no easy way to find them. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Tiddlywiki-An-exit-interview\",\n    \"title\": \"Tiddlywiki - An exit interview\"\n  }, \"Tiddlywiki - An exit interview\"), \"\"), mdx(\"p\", null, \"I was really hesitant to bite the bullet and migrate once more. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Sunk-Cost-Fallacy\",\n    \"title\": \"Sunk Cost Fallacy\"\n  }, \"Sunk Cost Fallacy\"), \". That was until the Zettelkasten crowd, Roam cult, Obsidian and Mr Ahren forced my hand, not only to take a look at my note taking application stack, but also to look at the workflow.\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Notes-on-Fourth-Migration\",\n    \"title\": \"Notes on Fourth Migration\"\n  }, \"Notes on Fourth Migration\"), \"\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"This was 2016. Today Org mode has a wonderful android app called \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.orgzly.com/\"\n  }, \"Orgzly\"), \", while Zim markup is supported by \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://play.google.com/store/apps/details?id=net.gsantner.markor\"\n  }, \"Markor\"), \"- both are excellent open-source android apps.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"f7e28d36-5b8d-5ac7-8642-842c3cf1aab3","fields":{"slug":"/History of Notes Migration","title":"History of Notes Migration"}}}]},"fields":{"slug":"/Notes on Fourth Migration","title":"Notes on Fourth Migration"}}},"pageContext":{"id":"856b2be1-4325-55ed-aa5c-aa6678310712"}},"staticQueryHashes":["2221750479","2468095761"]}