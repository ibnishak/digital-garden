{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Tiddlywiki - Extensibility issues","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Extensibility issues\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---extensibility-issues\"\n  }, \"Tiddlywiki - Extensibility issues\"), mdx(\"p\", null, \"Tiddlywiki has an expressive internal language in which most of plugins are written\", mdx(\"sup\", {\n    parentName: \"p\",\n    \"id\": \"fnref-1\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, \"1\")), \". This reminds me of Emacs/Vim attitude to extensibility. You have all the power, but only if you learn ELisp/Vim script/WikiText.\"), mdx(\"p\", null, \"None of these languages has any application outside their restricted environments. The knowledge regarding these can be neither transferred in or transferred out. There is hardly any meta tools for this internal language - say syntax-highlighting or prettification tools. In addition, unlike Emacs/Vim, the community size of Tiddlywiki is rather small. The effect of such barriers easy to gauge when you compare the speed at which \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://obsidian-plugin-stats.vercel.app/\"\n  }, \"plugin ecosystem is expanding for apps like Obsidian\"), \"(which has well defined API in Typescript) compared to that of Tiddlywiki.\"), mdx(\"p\", null, \"Overtime I have gained enough mastery over Tiddlywiki widgets and other quirks. However greater number of community built plugins have 2 fold effect\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Higher chances of finding something ready-made.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You have more templates to learn from and build something anew and personalized.\")), mdx(\"p\", null, \"So less tinkering, more actually writing.\"), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-1\"\n  }, \"While it is also possible to write plugins in Javascript, you will be hard-pressed to find any kind of documentation regarding this.\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - An exit interview\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---an-exit-interview\"\n  }, \"Tiddlywiki - An exit interview\"), mdx(\"p\", null, \"Fair warning: This is not a takedown. I am just explaining why to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"my particular use-case\"), \", Tiddlywiki is not a good fit anymore. In a way this is documentation of my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Circle-of-Competence\",\n    \"title\": \"Circle of Competence\"\n  }, \"Circle of Competence\"), \" rather than limitation of Tiddlywiki. As a tool Tiddlywiki has persisted for 15+ years and earned praise from industry giants. So before dismissing it based on anyone's opinion, it would be only fair to give it a try.\"), mdx(\"p\", null, \"For some years I have been noticing this pattern:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I forget why I stopped using TW5.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I restart using Tiddlywiki.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I realize why I stopped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I stop using TW5 again.\")), mdx(\"p\", null, \"For this reason I am logging those reasons so I won't have to use my time and energy to rediscover them another couple of times.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Inability-to-scale\",\n    \"title\": \"Tiddlywiki - Inability to scale\"\n  }, \"Tiddlywiki - Inability to scale\"), \"\")), mdx(\"p\", null, \"Usually if a tool fails to clear essential criteria of its category (See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Note-taking-Apps-Criteria\",\n    \"title\": \"Note taking Apps - Criteria\"\n  }, \"Note taking Apps - Criteria\"), \"), I do not bother to look into it any further. Here I am making an exception, at least to document the rest of issues.\"), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Extensibility-issues\",\n    \"title\": \"Tiddlywiki - Extensibility issues\"\n  }, \"Tiddlywiki - Extensibility issues\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-NodeJS-flavor\",\n    \"title\": \"Tiddlywiki - Issues with NodeJS flavor\"\n  }, \"Tiddlywiki - Issues with NodeJS flavor\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-HTML-flavor\",\n    \"title\": \"Tiddlywiki - Issues with HTML flavor\"\n  }, \"Tiddlywiki - Issues with HTML flavor\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-search\",\n    \"title\": \"Tiddlywiki - Issues with search\"\n  }, \"Tiddlywiki - Issues with search\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-markup\",\n    \"title\": \"Tiddlywiki - Issues with markup\"\n  }, \"Tiddlywiki - Issues with markup\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-UI-Community-and-the-rest\",\n    \"title\": \"Tiddlywiki - Issues with UI, Community and the rest\"\n  }, \"Tiddlywiki - Issues with UI, Community and the rest\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Conclusion\",\n    \"title\": \"Tiddlywiki - Conclusion\"\n  }, \"Tiddlywiki - Conclusion\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2fd5341e-5a6c-5aa7-9e44-a02d50a3ca63","fields":{"slug":"/Tiddlywiki - An exit interview","title":"Tiddlywiki - An exit interview"}}}]},"fields":{"slug":"/Tiddlywiki - Extensibility issues","title":"Tiddlywiki - Extensibility issues"}}},"pageContext":{"id":"c5111523-8b8c-584b-9690-f3580c6f0337"}},"staticQueryHashes":["2221750479","2468095761"]}