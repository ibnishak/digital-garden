{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Tiddlywiki - Issues with HTML flavor","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - Issues with HTML flavor\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---issues-with-html-flavor\"\n  }, \"Tiddlywiki - Issues with HTML flavor\"), mdx(\"p\", null, \"In HTML flavor, all the data is saved in a single HTML file. This is a unique Tiddlywiki approach and a radical one. Every other note taking solution including markdown, requires some sort of parser. You might find yourselves in a position where you don't have the privileges to install a software in a computer, thereby cutting you off from your notes. However it is a safe bet that any of those machines will have a web browser installed, and that is all you need to read your Tiddlywiki notes in single HTML flavor.\"), mdx(\"p\", null, \"The nitty-gritty details are not rosy though. You have all the data in a single file - essentially a database with no syncing API. So you need to sync the entire file between devices. Imagine you have a Tiddlywiki that is 25MB in size (remember h0p3's wiki as 15K notes and is 50MB in size). Each minor correction in any of those notes require re-upload of 25MB. By your 1000th modification, you have consumed 25GB bandwidth as opposed to 10MB for a 10KB file.\\nConsider a syncing conflict. It is certainly not impossible, but definitely harder to diff two large HTML files than two small text files. Git does not look kindly upon a >2MB HTML file modified in every commit. A partial solution to this issue is using Timimi - but it is more of a backup solution than version control.\"), mdx(\"p\", null, \"For a user who is familiar with the ease tools like fzf, fd etc brings to workflow, single HTML file might not be palatable. Again it is not impossible to modify the Tiddlywiki HTML file using the familiar scripting tools, just harder.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tiddlywiki - An exit interview\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tiddlywiki---an-exit-interview\"\n  }, \"Tiddlywiki - An exit interview\"), mdx(\"p\", null, \"Fair warning: This is not a takedown. I am just explaining why to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"my particular use-case\"), \", Tiddlywiki is not a good fit anymore. In a way this is documentation of my \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Circle-of-Competence\",\n    \"title\": \"Circle of Competence\"\n  }, \"Circle of Competence\"), \" rather than limitation of Tiddlywiki. As a tool Tiddlywiki has persisted for 15+ years and earned praise from industry giants. So before dismissing it based on anyone's opinion, it would be only fair to give it a try.\"), mdx(\"p\", null, \"On the other hand, I would ask the long-time Tiddlywiki users to stop and consider for a moment if Tiddlywiki is actually aiding expansion of their knowledge, or is it merely satisfying their urge to tinker with stuff. Also see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Sunk-Cost-Fallacy\",\n    \"title\": \"Sunk Cost Fallacy\"\n  }, \"Sunk Cost Fallacy\"), \".\"), mdx(\"p\", null, \"For some years I have been noticing this pattern:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I forget why I stopped using TW5.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I restart using Tiddlywiki.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I realize why I stopped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I stop using TW5 again.\")), mdx(\"p\", null, \"For this reason I am logging those reasons so I won't have to use my time and energy to rediscover them another couple of times.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Inability-to-scale\",\n    \"title\": \"Tiddlywiki - Inability to scale\"\n  }, \"Tiddlywiki - Inability to scale\"), \"\")), mdx(\"p\", null, \"Usually if a tool fails to clear essential criteria of its category (See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Note-taking-Apps-Criteria\",\n    \"title\": \"Note taking Apps - Criteria\"\n  }, \"Note taking Apps - Criteria\"), \"), I do not bother to look into it any further. Here I am making an exception, at least to document the rest of issues.\"), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Extensibility-issues\",\n    \"title\": \"Tiddlywiki - Extensibility issues\"\n  }, \"Tiddlywiki - Extensibility issues\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-NodeJS-flavor\",\n    \"title\": \"Tiddlywiki - Issues with NodeJS flavor\"\n  }, \"Tiddlywiki - Issues with NodeJS flavor\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-HTML-flavor\",\n    \"title\": \"Tiddlywiki - Issues with HTML flavor\"\n  }, \"Tiddlywiki - Issues with HTML flavor\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-search\",\n    \"title\": \"Tiddlywiki - Issues with search\"\n  }, \"Tiddlywiki - Issues with search\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-markup\",\n    \"title\": \"Tiddlywiki - Issues with markup\"\n  }, \"Tiddlywiki - Issues with markup\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Issues-with-UI-Community-and-the-rest\",\n    \"title\": \"Tiddlywiki - Issues with UI, Community and the rest\"\n  }, \"Tiddlywiki - Issues with UI, Community and the rest\"), \"\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tiddlywiki-Conclusion\",\n    \"title\": \"Tiddlywiki - Conclusion\"\n  }, \"Tiddlywiki - Conclusion\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2fd5341e-5a6c-5aa7-9e44-a02d50a3ca63","fields":{"slug":"/Tiddlywiki - An exit interview","title":"Tiddlywiki - An exit interview"}}}]},"fields":{"slug":"/Tiddlywiki - Issues with HTML flavor","title":"Tiddlywiki - Issues with HTML flavor"}}},"pageContext":{"id":"ea312b8e-f511-55df-868b-c68d03f0e081"}},"staticQueryHashes":["2221750479","2468095761"]}