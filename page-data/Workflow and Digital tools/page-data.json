{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Workflow and Digital tools","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Workflow and Digital tools\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"workflow-and-digital-tools\"\n  }, \"Workflow and Digital tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Purpose-of-reading-books\",\n    \"title\": \"Purpose of reading books\"\n  }, \"Purpose of reading books\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Purpose-of-writing-notes-in-your-own-words\",\n    \"title\": \"Purpose of writing notes in your own words\"\n  }, \"Purpose of writing notes in your own words\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Personal Knowledge base\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PKB-Goals\",\n    \"title\": \"PKB - Goals\"\n  }, \"PKB - Goals\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PKB-Experiences\",\n    \"title\": \"PKB - Experiences\"\n  }, \"PKB - Experiences\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PKB-Current-Limitations\",\n    \"title\": \"PKB - Current Limitations\"\n  }, \"PKB - Current Limitations\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Comparison-of-note-taking-tools\",\n    \"title\": \"Comparison of note taking tools\"\n  }, \"Comparison of note taking tools\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ibnishak.github.io/blog/post/zettelkasten-what-why-and-why-not/\"\n  }, \"Zettelkasten - What, Why and Why not?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Digital-Garden-Comparison-with-blog\",\n    \"title\": \"Digital Garden - Comparison with blog\"\n  }, \"Digital Garden - Comparison with blog\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Digital-Garden-Current-Limitations\",\n    \"title\": \"Digital Garden - Current Limitations\"\n  }, \"Digital Garden - Current Limitations\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Purpose of reading books\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"purpose-of-reading-books\"\n  }, \"Purpose of reading books\"), mdx(\"p\", null, \"World around us can be only understood via models. The purpose of reading is to give you more models, or improve existing one to more accurately understand reality. Without an accurate understanding, we will fail to make good decisions.\"), mdx(\"p\", null, \" It is for the same reason we should try to read books that does not conform with our thought patterns.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201C\\u2018Read 500 pages every day. That\\u2019s how knowledge works. It builds up like compound interest. All of you can do it, but I guarantee not many of you will do it,\\u2019 says Warren Buffett\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"It is not about the number of books read in a year. What matters is the knowledge absorbed from the and the change they introduced in your life. \\u201CThe smarter you get, the slower you read.\\u2019 Naval Ravikant\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201CBooks give you access to the smartest brains on our planet. And learning from the greatest thinkers and doers is your fast track to health, wealth, and wisdom.\\u201D by Eva Keiffenheim\")), mdx(\"p\", null, \"See Also: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Model-dependant-realism\",\n    \"title\": \"Model dependant realism\"\n  }, \"Model dependant realism\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"7f2666ea-548f-5416-9502-1dfe323970ff","fields":{"slug":"/Purpose of reading books","title":"Purpose of reading books"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Purpose of writing notes in your own words\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"purpose-of-writing-notes-in-your-own-words\"\n  }, \"Purpose of writing notes in your own words\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you are forced to write, you are forced to clarify your thoughts (tacit knowledge to explicit knowledge). Unless you have clarity regarding your thoughts,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you cannot communicate effectively.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"check validity of your thoughts and new ideas.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"resist being brainwashed by fauxlosophical trapeze artists.\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201CThe reason for writing is simple. Through writing you will learn what you think and you will come to know yourself. Write to find out what you think. Unless you know what you think, you will always be subject to the will of others.\\u201D \\u2013Deborah J. Haynes, in Art Lessons: Meditations on the Creative Life\\n\\u201CWhen we read, another person thinks for us: we merely repeat his mental process.\\u2019\\u201D by Eva Keiffenheim\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note taking, if done intentionally, will allow find the differences and contradictions between the philosophy you believe you hold in your conscious mind, while actually follow unconsciously in real life.\")), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Collectors-fallacy\",\n    \"title\": \"Collectors fallacy\"\n  }, \"Collectors fallacy\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"8f6bca4a-d489-5521-809d-9fac5bf2a041","fields":{"slug":"/Purpose of writing notes in your own words","title":"Purpose of writing notes in your own words"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PKB - Goals\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"personal-knowledge-base---goals\"\n  }, \"Personal Knowledge Base - Goals\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Bring useful stuff I find while reading to my life\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Become an original thinker.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Organize my notes to facilitate easy finding when I look for it.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Organize my notes to facilitate serendipitous discovery\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"f2e6242d-b96d-58e1-9ab5-51c6ce6f4178","fields":{"slug":"/PKB - Goals","title":"Personal Knowledge Base - Goals"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PKB - Experiences\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"personal-knowledge-base---experiences\"\n  }, \"Personal Knowledge Base - Experiences\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Keep the tools and data in simplest forms possible. The interactions with them can be complex.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Avoid folders. It makes linking difficult and puts data into silos.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Indexes are important to get a birds eye view. Indexes should also be used to create proper hierarchy among notes instead of folders.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Indexes should come first in filesystem\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Filesystem is inefficient because of the limited ability to sort notes, resulting in separation of related notes. Deliberate naming of files using numbers is hard to revise in case of insertion of new notes in between. However previous attempts at zettelkasten prove that filesystem cannot be ignored entirely either due to the simple fact that it is universal. The compromise is to ensure that indexes appear first in filesystem by virtue of the fact that their names start with digits (eg:001-zettelkasten)\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Indexes should be excluded from zettelkasten graphs. Graphs should only show relations \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"independent of indexes\"), \". This can be reasonably achieved using local graphs. Exclusion of indexes from global graphs can provide new insights by removing the noise of vertices created by indexes.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Manage indexes manually. The advantage of zettelkasten comes from interacting with notes. Automation runs the risk of reducing interactions.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Tags are yet to be found useful. Already notes are connected via links and indexes. I did not find the need for a third layer of connections.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3927c967-f799-5722-b83a-f36770dbeeb8","fields":{"slug":"/PKB - Experiences","title":"Personal Knowledge Base - Experiences"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PKB - Current Limitations\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"personal-knowledge-base---current-limitations\"\n  }, \"Personal Knowledge Base - Current Limitations\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Inefficiency of search\"), \": There are fast grepping solutions available but I am yet to find one that can do a more context aware search. Searching for \\\"cricket milestones\\\" might bring up zero results, while searching for \\\"cricket\\\" and \\\"milestones\\\" separately will bring up irrelevant results.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Uselessness of search\"), \": If you do not know something existed in your zettelkasten, how will you search for it? I have had many times over the years where I reviewed my notes and reminded myself of things I had completely forgotten. Search is useless in that case.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Physical zettelkasten has the advantage that notes.can be pulled out and spatially arranged to give us insights. In digital version, this is limited by screen space, and scrolling somehow doesn't match the experience. However, digital zettelkasten has numerous advantages over physical one - including portability, backups, access to past revisions, and environment friendly.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The function of zettelkasten is to act as a second brain and thereby help us unload the brain. However unlike brain, zettelkasten does not automatically find link between existing ideas and the new ideas or notes you are adding to zettelkasten. May be the brand new brain spark you just had is merely a rewording of the one you had last month which you dutifully noted but forgot about. There are softwares like nvalt which try to tackle this, however they are limited by the technology of our time. For building a perfect zettelkasten, you need to hold the entire thing in your head, which runs counter to the philosophy of having a second brain. Next best solution would be emergence of powerful semantic search.\")), mdx(\"p\", null, \"It is to be noted that these are things that would have been great if it was present. Nevertheless you zettelkasten or digital garden or commonplace book or whatever you call it is a great tool to give an external node for brain to latch on to spark our thinking.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"d8f41fb4-6ee8-5697-83ff-a5ff4bcc9b00","fields":{"slug":"/PKB - Current Limitations","title":"Personal Knowledge Base - Current Limitations"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Comparison of note taking tools\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"comparison-of-note-taking-tools\"\n  }, \"Comparison of note taking tools\"), mdx(\"h2\", {\n    \"id\": \"vnote\"\n  }, \"Vnote\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+has vim mode\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+rendering is different\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+can add templates, css and code block style\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+markdown support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+navigation bar\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+can tag files\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+tabbar\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will not automatically detect files in its folder. Have to be present in vnote.json\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-No way to go to edit mode on the current line\")), mdx(\"h2\", {\n    \"id\": \"trillium\"\n  }, \"Trillium\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-Sqlite database, not plain text\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-Electron\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+can tag files\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Programmable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Link maps\")), mdx(\"h2\", {\n    \"id\": \"qownnotes\"\n  }, \"Qownnotes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Separate Render window\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Can tag files\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-Involves sqlite for tagging\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-Failed to import existing notes\")), mdx(\"h2\", {\n    \"id\": \"vs-code\"\n  }, \"VS Code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Already used for other purposes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-Electron\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extendable with plugins\")), mdx(\"h2\", {\n    \"id\": \"org-mode\"\n  }, \"Org mode\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-Cannot be used in mobile\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emacsclient is not working anymore in termux.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Best to manage Areas with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"workflow-org-mode\"\n  }, \"Orgzly\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"emacs-for-markdown\"\n  }, \"Emacs for markdown\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rg integration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extendable\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keyboard driven\")), mdx(\"h2\", {\n    \"id\": \"tiddlywiki\"\n  }, \"Tiddlywiki\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NodeJS cannot be used in termux due to huge startup times.\")), mdx(\"h2\", {\n    \"id\": \"glamorousoolkit-lepiter\"\n  }, \"Glamorousoolkit Lepiter\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Buggy.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Heavy. Not electron although RAM usage is comparable.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Markdown support is patchy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Files are stored in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ombu\"), \" format. No export option available\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"+Programmable\")), mdx(\"h2\", {\n    \"id\": \"dendron-vscode\"\n  }, \"Dendron VSCode\"), mdx(\"h2\", {\n    \"id\": \"foam-vscode\"\n  }, \"Foam VSCode\"), mdx(\"h2\", {\n    \"id\": \"vimwiki\"\n  }, \"Vimwiki\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FZF and rg integration\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"e6284798-79c3-5dce-a053-c8b51e806c6c","fields":{"slug":"/Comparison of note taking tools","title":"Comparison of note taking tools"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Digital Garden - Comparison with blog\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"digital-garden---comparison-with-blog\"\n  }, \"Digital Garden - Comparison with blog\"), mdx(\"p\", null, \"The major issue seems to be that of semantics. There is no universal definition of \\\"blog\\\". However, most blogs we see have the following pattern.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Most posts are essay-ish.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Posts are standalone. They might link to resources outside the blog itself.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Blog index pages are a time-stamped stream that is very RSS friendly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Posts are published after a certain finality is achieved. It is more performative writing.\")), mdx(\"p\", null, \"In comparison, digital gardens are more like a personal mini Wikipedia.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Length of posts vary between a tweet sized bit to a couple of paragraphs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Posts are linked to each other. Other posts in digital garden either continue the conversation or are laterally related to current post. Most digital gardens also shows backlinks - those posts which link to the current post.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Digital garden has a curated home page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Digital garden in more like a broadcast log of the knowledge acquired. It follows the philosophy of \\\"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://notes.andymatuschak.org/About_these_notes?stackedNotes=z21cgR9K3UcQ5a7yPsj2RUim3oM2TzdBByZu#:~:text=One%20of%20my%20favorite%20ways,from%20Robin%20Sloan%20(below).&text=I%20love%20this%20kind%20of,followings%20over%20the%20long%20term.\"\n  }, \"working with your garage door open\"), \"\\\".\")), mdx(\"p\", null, \"As you can see, all these characteristics are arbitrarily distributed between blog and a digital garden. There is nothing preventing from having a blog with characters mentioned under digital garden category or vice versa.\"), mdx(\"p\", null, \"See also: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"digital-garden--current-limitations\"\n  }, \"Digital garden: Current limitations\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"0b8adcf1-e534-5aa9-abe7-47199d6867af","fields":{"slug":"/Digital Garden - Comparison with blog","title":"Digital Garden - Comparison with blog"}}},{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Digital Garden - Current Limitations\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"digital-garden---current-limitations\"\n  }, \"Digital Garden - Current Limitations\"), mdx(\"h3\", {\n    \"id\": \"digital-garden-is-more-dependant-on-search\"\n  }, \"Digital garden is more dependant on search.\"), mdx(\"p\", null, \"Blog navigation is simpler, because of fewer posts and date wise sorted list. By its nature, digital garden takes you from one post to another in quick succession. A curated homepage can list only a limited number of links, and a reader cannot be expected to remember entirety of path traversed to reach a post. \"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Solution\"), \": Ideal solution would be a fuzzy launcher like fzf.  Existing javascript equivalents of fzf seems sub-par, especially given that number of posts in digital garden would be considerably bigger than that of a blog. Someone serious about their digital garden might run a server that will solve this issue with appropriate backend. However for the static site crowd, no solutions are available so far. \"), mdx(\"h3\", {\n    \"id\": \"updates-to-post-are-not-visible\"\n  }, \"Updates to post are not visible.\"), mdx(\"p\", null, \"Given that most posts continuously evolve, and mosts posts are out of sight of main index, there should be a way to stay up-to-date with changes. \"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Solution\"), \": RSS feeds. Separate feeds for new notes and changes to existing notes. Possibly a running log of changes in the home page.\"), mdx(\"h3\", {\n    \"id\": \"less-dependable\"\n  }, \"Less dependable.\"), mdx(\"p\", null, \"Since posts are published before it is completely refined and that it may change anytime, it might undermine reader's ability to trust the written word. \"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Solution\"), \": Tags indication the level of note - draft, half-done, finished etc.\"), mdx(\"p\", null, \"PS: Not all digital gardens need be published. I am perfectly happy keeping two. Also most of the limitations mentioned above are only applicable to the visitor. I have superpowers called fzf, ripgrep, fd and vscode.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"38119d35-1a84-5da8-992d-73b381d7aa52","fields":{"slug":"/Digital Garden - Current Limitations","title":"Digital Garden - Current Limitations"}}}],"inboundReferences":[{"__typename":"Mdx","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DryMind\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"index\"\n  }, \"Index\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/On-self\",\n    \"title\": \"On self\"\n  }, \"On self\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/On-society-and-social-behavior\",\n    \"title\": \"On society and social behavior\"\n  }, \"On society and social behavior\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Workflow-and-Digital-tools\",\n    \"title\": \"Workflow and Digital tools\"\n  }, \"Workflow and Digital tools\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Linkbox\",\n    \"title\": \"Linkbox\"\n  }, \"Linkbox\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"9ca41a63-ee9d-545d-a8af-efb4a7ecf2ea","fields":{"slug":"/About","title":"Index"}}}]},"fields":{"slug":"/Workflow and Digital tools","title":"Workflow and Digital tools"}}},"pageContext":{"id":"894fa2ac-1910-5604-8c34-cb0aa815b8fc"}},"staticQueryHashes":["2221750479","2468095761"]}